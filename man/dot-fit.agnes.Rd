% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.agnes.R
\name{.fit.agnes}
\alias{.fit.agnes}
\title{Agglomerative nesting for \code{tidyfit}}
\usage{
\method{.fit}{agnes}(self, data = NULL)
}
\arguments{
\item{self}{a 'tidyFit' R6 class.}

\item{data}{a data frame, data frame extension (e.g. a tibble), or a lazy data frame (e.g. from dbplyr or dtplyr).}
}
\value{
A fitted 'tidyFit' class model.
}
\description{
Calculates clusters using agglomerative nesting on a 'tidyFit' \code{R6} class. The function can be used with \code{\link{cluster}}.
}
\details{
\strong{Hyperparameters:}

\emph{None. Cross validation not applicable.}

\strong{Important method arguments (passed to \code{\link{m}})}
\itemize{
\item k (number of clusters)
\item method
\item metric
}

The function provides a wrapper for \code{cluster::agnes}. See \code{?agnes} for more details.

\strong{Implementation}

In addition to the arguments passed to \code{cluster::agnes}, the function takes the argument \code{k} which specifies the number of clusters. An argument \code{transpose} is also provided (default \code{FALSE}). When \code{transpose = TRUE}, the data is transposed and clustering is done on \code{cor(data)} instead.

The formula can be specified with a LHS variable, as \code{~ x + z}.
}
\examples{
# Load data
data <- tidyfit::Factor_Industry_Returns[1:100,]

# Stand-alone function
fit <- m("agnes",  ~ SMB + HML, data)
fit

# Within 'cluster' function
fit <- cluster(data, ~ ., m("agnes", k = 4), .mask = c("Date", "Industry"))
fitted(fit)

# Cluster across columns
fit <- cluster(data, ~ ., m("agnes", k = 4, transpose = TRUE), .mask = c("Date", "Industry"))
fitted(fit)

}
\seealso{
\code{\link{.fit.diana}}, \code{\link{.fit.dtw}}, \code{\link{.fit.dbscan}} and \code{\link{m}} methods
}
\author{
Johann Pfitzinger
}
